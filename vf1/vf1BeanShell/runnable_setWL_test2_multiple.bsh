// Demo of runnables on acq engine
// Arthur Edelstein, UCSF, March 2011.
// arthuredelstein@gmail.com
//
// Modified to make the runnable set the wavelength
// of the VF1.  Brandon Schlomann, 4/7/16

acq.clearRunnables();

runnable500 = new Runnable() {
   int count = 0;
   public void run() {
      import mmcorej.CharVector;
		

		port = "COM4";
		CharVector message = new CharVector();
		char cmd = '\u00da';  //00da = 218 = setWL
		char wl1 = '\u00f4';  // 1f4 = 500.  Need to 
		char wl2 = '\u0001';  // package in this way.

		message.add(cmd);
		message.add(wl1);
		message.add(wl2);


		mmc.writeToSerialPort(port,message);
   }
};

runnable510 = new Runnable() {
   int count = 0;
   public void run() {
      import mmcorej.CharVector;
		

		port = "COM4";
		CharVector message = new CharVector();
		char cmd = '\u00da';  //00da = 218 = setWL
		char wl1 = '\u00fe';  // 1fe = 510.  Need to 
		char wl2 = '\u0001';  // package in this way.

		message.add(cmd);
		message.add(wl1);
		message.add(wl2);


		mmc.writeToSerialPort(port,message);
   }
};

runnable515 = new Runnable() {
   int count = 0;
   public void run() {
      import mmcorej.CharVector;
		

		port = "COM4";
		CharVector message = new CharVector();
		char cmd = '\u00da';  //00da = 218 = setWL
		char wl1 = '\u0003';  // 203 = 515.  Need to 
		char wl2 = '\u0002';  // package in this way.

		message.add(cmd);
		message.add(wl1);
		message.add(wl2);


		mmc.writeToSerialPort(port,message);
   }
};

// Run the runnable on all frames and positions,
// but only channel 0 and slice 0.
// -1 --> attach to all planes along given dimension
acq.attachRunnable(1,-1,0,0,runnable500); // f, p, c, s 
acq.attachRunnable(2,-1,0,0,runnable510); // f, p, c, s 
acq.attachRunnable(3,-1,0,0,runnable515); // f, p, c, s 

// After running this script, you can test the results by
// running a multi-dimensional acquisition from the Acquisition Dialog.